// Demo the quad alphanumeric display LED backpack kit
// scrolls through every character, then scrolls Serial
// input onto the display

#include <Wire.h>
#include <Adafruit_GFX.h>
#include "Adafruit_LEDBackpack.h"

int inc = 0;
int maxInc = 3;

char prefixes[] = {'M', 'A', 'B', 'T'};

const int btnPin = 12;

bool pressed_flag=false;
bool button_timestamp=millis();
uint16_t button_period=100;

Adafruit_AlphaNum4 alpha4 = Adafruit_AlphaNum4();

void zipDisplay() { // this is a little blocking
  alpha4.writeDigitRaw(3, 0x0);
  alpha4.writeDigitRaw(0, 0xBFFF);
  alpha4.writeDisplay();
  delay(100);
  alpha4.writeDigitRaw(0, 0x0);
  alpha4.writeDigitRaw(1, 0xBFFF);
  alpha4.writeDisplay();
  delay(100);
  alpha4.writeDigitRaw(1, 0x0);
  alpha4.writeDigitRaw(2, 0xBFFF);
  alpha4.writeDisplay();
  delay(100);
  alpha4.writeDigitRaw(2, 0x0);
  alpha4.writeDigitRaw(3, 0xBFFF);
  alpha4.writeDisplay();
  delay(100);
  
  alpha4.clear();
  alpha4.writeDisplay();
}

// right justifies digits
void displayNum(int n) {
  String str = String(n); // terrible arduino function

  if (str.length() < 4) {
    for(int i=0;i < str.length(); i++) {
      alpha4.writeDigitAscii(i+(4-str.length()), str.charAt(i));
    }
  }
}

void setup() {
  Serial.begin(9600);
  
  pinMode(btnPin, INPUT);

  alpha4.begin(0x70);  // pass in the address

  alpha4.setBrightness(7);

  zipDisplay();

  alpha4.writeDigitAscii(0, prefixes[inc]);
  displayNum(pow(12,inc-0));
  alpha4.writeDisplay();
}

void loop() {

  if (millis() - button_timestamp > button_period) {
    button_timestamp=millis();
    if ( digitalRead(btnPin) == false && !pressed_flag ){
      zipDisplay();
      inc++;
      if (inc > maxInc) { inc = 0; }
      pressed_flag=true;
    }
    else if (digitalRead(btnPin) == true && pressed_flag ){
      pressed_flag=false;
    }
  }

  alpha4.writeDigitAscii(0, prefixes[inc]);
  displayNum(pow(12,inc));
  alpha4.writeDisplay();
}
