#include <ArduinoJson.h>
#include "BluetoothSerial.h"
#include <Wire.h>
#include <Adafruit_GFX.h>
#include "Adafruit_LEDBackpack.h"

Adafruit_AlphaNum4 alphaLED = Adafruit_AlphaNum4(); 
BluetoothSerial SerialBT;

#define IDLE                0 
#define REQUEST_START       1 
#define RECEIVED_PACKET     2
#define CHANGE_BRIGHTNESS   3
#define CHANGE_MODE         4
#define TEMP_WARNING        5
#define ERROR_WARNING       6
#define RECEIVED_BAD_PACKET 7
#define KILLSTATE           8

#define BTN_PIN1  12
#define BTN_PIN2  13
#define KILLSWITCH_PIN 17

#define BAUDRATE 115200

// magic nums for calculation of rpm
//   calculations do not deal with gear ratios
#define POLEPAIRS    7
#define CIRCUMFERENCE 78.5 // much easier to circumerence measure with tape
#define INCH_IN_MILE 63360
double MPH_scale = (CIRCUMFERENCE * 60) / (POLEPAIRS * INCH_IN_MILE);
#define MINVOLTAGE 86.4
#define MAXVOLTAGE 104.0 // 24s lipos
#define MAXTEMP 70

// controls if the LED is bright or dim
bool brightnessToggle = false;

// button reading timers
bool buttonState1 = false;
bool lastReading1 = false;
bool readingState1 = false;
int readingTime1 = 0; 
unsigned long onTime1 = 0;

bool buttonState2 = false;
bool lastReading2 = false;
bool readingState2 = false;
int readingTime2 = 0; 
unsigned long onTime2 = 0;

// used to parse input
int inputInc = 0;
char * tags [] = {
    (char*) "ehz",
    (char*) "tmp",
    (char*) "vbus",
    (char*) "MOS_temp"
};

#define maxTags     (sizeof(tags)/sizeof(char *))
char prefixes[maxTags] = {'M', 'A', 'B', 'T'}; // MPH, AMPS, BATTERY, TEMP

// serial reading stuff
#define STR_LEN 1024

char inChar;
char inChar2;
char oldChar;
char inStr[STR_LEN] = "";
char cpStr[STR_LEN] = "";
int count = 0;

unsigned long timeSinceReceive;
unsigned long currentTime;
const unsigned long serialInterval = 600;

bool connected;

int state = REQUEST_START;

void setup() {
  Serial.begin(BAUDRATE);
  SerialBT.begin("ESP32 Speedometer"); // name seen by BLE receiving device

  pinMode(BTN_PIN1, INPUT);
  pinMode(BTN_PIN2, INPUT);
  pinMode(KILLSWITCH_PIN, OUTPUT);

  digitalWrite(KILLSWITCH_PIN, HIGH);

  alphaLED.begin(0x70);
  alphaLED.setBrightness(0);

  delay(1000); 
}

void loop() {

  connected = SerialBT.connect("MP2 LINK");
  if(connected) {
    Serial.println("Connected Succesfully!");
  } 
  else 
  {
    while(!SerialBT.connected(10000)) 
    {
      Serial.println("Failed to connect"); 
    }
  }
  delay(100);
}
